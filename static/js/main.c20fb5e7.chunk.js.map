{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","isLoading","setLoading","loadUsers","a","fetch","then","response","json","console","log","data","setTimeout","VanillaTilt","init","document","querySelectorAll","max","speed","className","id","onClick","map","first_name","last_name","avatar","email","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2RAmDeA,MA/Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAS,uCAAG,sBAAAC,EAAA,sDAChBF,GAAW,GACXG,MAAM,sCACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLC,QAAQC,IAAIF,EAAKG,MACjBX,EAASQ,EAAKG,SAEhBC,YAAY,WACVV,GAAW,KACX,MAVc,2CAAH,qDAmBf,OANAW,IAAYC,KAAKC,SAASC,iBAAiB,aAAc,CACzDC,IAAK,GACLC,MAAO,IACL,YAAa,MAIb,sBAAKC,UAAU,MAAf,UACE,sBAAKC,GAAG,SAAR,UACE,oBAAIA,GAAG,SAAP,oBACA,mBAAGA,GAAG,MAAMC,QAASlB,EAArB,SACE,kDAGHF,EAAW,kCAAS,qBAAKmB,GAAG,aAA4B,GAEzD,qBAAKA,GAAG,QAAR,SACGrB,EAAMuB,KAAI,gBAAEF,EAAF,EAAEA,GAAIG,EAAN,EAAMA,WAAYC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,MAArC,OACT,qBAAKP,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKQ,IAAKF,EAAQG,IAAI,WACtB,oBAAGR,GAAG,OAAN,UAAcG,EAAd,IAA2BC,KAC3B,4BAAIE,MAHqBN,cC3BxBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,M","file":"static/js/main.c20fb5e7.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport VanillaTilt from 'vanilla-tilt'\nimport './App.css';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const loadUsers = async()=>{\n    setLoading(true);\n    fetch('https://reqres.in/api/users?page=1')\n    .then((response) => response.json())\n    .then((json) => {\n      console.log(json.data);\n      setUsers(json.data);\n    })\n    setTimeout( () => {\n      setLoading(false);\n    },1500)\n  };\n  \n  VanillaTilt.init(document.querySelectorAll(\".tiltCard\"), {\n\t\tmax: 28,\n\t\tspeed: 500,\n    \"max-glare\": .55\n\t});\n\n  return (\n    <div className=\"App\">\n      <nav id=\"navbar\">\n        <h1 id=\"header\">REQRES</h1>\n        <a id=\"btn\" onClick={loadUsers}>\n          <span>Get Users</span>\n        </a>\n      </nav>\n      {isLoading ?<section><div id=\"loader\"></div></section> : ''} \n      \n      <div id=\"cards\">\n        {users.map(({id, first_name, last_name, avatar, email})=>(\n          <div className=\"tiltCard\">\n            <div className=\"card\" key={id}>\n              <img src={avatar} alt=\"avatar\"/>\n              <p id=\"name\">{first_name} {last_name}</p>\n              <p>{email}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}